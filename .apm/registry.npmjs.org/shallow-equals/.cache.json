{"_id":"shallow-equals","_rev":"3-6b5674cad0da04c5cd63057b8942b07a","name":"shallow-equals","description":"Determine if an array or object is equivalent with another, *not* recursively","dist-tags":{"latest":"0.0.0"},"versions":{"0.0.0":{"name":"shallow-equals","description":"Determine if an array or object is equivalent with another, *not* recursively","version":"0.0.0","main":"index.js","browser":"index.js","dependencies":{},"devDependencies":{"tape":"~2.5.0"},"scripts":{},"author":{"name":"Hugh Kennedy","email":"hughskennedy@gmail.com","url":"http://hughsk.io/"},"license":"MIT","repository":{"type":"git","url":"git://github.com/hughsk/shallow-equals"},"bugs":{"url":"https://github.com/hughsk/shallow-equals/issues"},"homepage":"https://github.com/hughsk/shallow-equals","keywords":["shallow","equals","compare","equality","check","test"],"_id":"shallow-equals@0.0.0","dist":{"shasum":"071b29fea3d8b40ae69d9ff63fc468b0b422878b","tarball":"http://registry.npmjs.org/shallow-equals/-/shallow-equals-0.0.0.tgz"},"_from":".","_npmVersion":"1.4.2","_npmUser":{"name":"hughsk","email":"hughskennedy@gmail.com"},"maintainers":[{"name":"hughsk","email":"hughskennedy@gmail.com"}],"directories":{}}},"readme":"# shallow-equals [![Flattr this!](https://api.flattr.com/button/flattr-badge-large.png)](https://flattr.com/submit/auto?user_id=hughskennedy&url=http://github.com/hughsk/shallow-equals&title=shallow-equals&description=hughsk/shallow-equals%20on%20GitHub&language=en_GB&tags=flattr,github,javascript&category=software)[![experimental](http://hughsk.github.io/stability-badges/dist/experimental.svg)](http://github.com/hughsk/stability-badges) #\n\nDetermine if an array or object is equivalent with another, *not* recursively.\n\n## Usage ##\n\n[![shallow-equals](https://nodei.co/npm/shallow-equals.png?mini=true)](https://nodei.co/npm/shallow-equals)\n\n### `equals(a, b, [compare])` ###\n\nCheck if `a` and `b` are pretty much the same thing. Note this won't be the\ncase if `a` and `b` are different types (e.g. Array vs. Object, String vs.\nFunction).\n\nBy default, all comparisons between values are using the strict equality\n(`===`) operator. You can also pass in a custom `compare` function to override\nthis behavior.\n\n``` javascript\nvar equals = require('shallow-equals')\n\n// true:\nequals([1, 2, 3], [1, 2, 3])\n\n// true:\nequals({ hello: 'world' }, { hello: 'world' })\n\n// false:\nequals([1, 2, {}], [1, 2, {}])\n\n// true:\nequals([1, 2], [\n  { value: 1 },\n  { value: 2 }\n], function(a, b) {\n  return a === b.value\n})\n```\n\n## License ##\n\nMIT. See [LICENSE.md](http://github.com/hughsk/shallow-equals/blob/master/LICENSE.md) for details.\n","maintainers":[{"name":"hughsk","email":"hughskennedy@gmail.com"}],"time":{"modified":"2014-02-26T12:40:10.202Z","created":"2014-02-26T12:40:10.202Z","0.0.0":"2014-02-26T12:40:10.202Z"},"homepage":"https://github.com/hughsk/shallow-equals","keywords":["shallow","equals","compare","equality","check","test"],"repository":{"type":"git","url":"git://github.com/hughsk/shallow-equals"},"author":{"name":"Hugh Kennedy","email":"hughskennedy@gmail.com","url":"http://hughsk.io/"},"bugs":{"url":"https://github.com/hughsk/shallow-equals/issues"},"license":"MIT","readmeFilename":"README.md","users":{"hustler":true},"_attachments":{},"_etag":"\"6KIFMPHE2YVYV5L8W4HP54D0F\""}